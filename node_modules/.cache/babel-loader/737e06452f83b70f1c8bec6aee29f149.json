{"remainingRequest":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/babel-loader/lib/index.js!/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daniloviacavavizarreta/Desktop/48h-challenge/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/src/components/HelloWorld.vue","mtime":1566599763891},{"path":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/cache-loader/dist/cjs.js","mtime":1566508029775},{"path":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/babel-loader/lib/index.js","mtime":1566508033964},{"path":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/cache-loader/dist/cjs.js","mtime":1566508029775},{"path":"/Users/daniloviacavavizarreta/Desktop/48h-challenge/node_modules/vue-loader/lib/index.js","mtime":1566508035107}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios'; // import BrewMap from './BrewMap'\n\nimport { LMap, LTileLayer, LMarker, LPolygon, LPopup } from 'vue2-leaflet';\nexport default {\n  name: \"HelloWorld\",\n  components: {\n    // BrewMap,\n    LMap: LMap,\n    LTileLayer: LTileLayer,\n    LMarker: LMarker,\n    LPolygon: LPolygon,\n    LPopup: LPopup\n  },\n  data: function data() {\n    return {\n      puntos: null,\n      url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n      zoom: 13,\n      center: [0.43583, 48.01156],\n      markerLatLng: [0.42183, 48.01156],\n      polygon: {\n        id: 'my_id',\n        latlngs: [],\n        color: 'blue'\n      },\n      popup: {\n        id: 1,\n        latlng: L.latLng(47.417220, -1.25),\n        content: 'Another'\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(\"https://rawgit.com/gregoiredavid/france-geojson/master/regions/pays-de-la-loire/communes-pays-de-la-loire.geojson\").then(function (response) {\n      _this.polygon.latlngs = response.data.features[0].geometry.coordinates[0];\n    });\n  },\n  methods: {\n    change_color: function change_color(polygon) {\n      polygon.color = 'green';\n    },\n    onMapClick: function onMapClick(e) {\n      this.popup.content = \"Coordenadas (\" + e.latlng.lat + \" \" + e.latlng.lng + \")\", this.popup.content = \"yarn ser<ul class='borde'><li> <p>Muestras</p> <input name='muestras' placeholder='1'></li> <li><p>Radio(m)</p> <input name='radio' placeholder='10'></li></ul><div class='btns'><a href='' v-on:click='borrar'>Borrar</a><a href='' v-on:click='guardar'>Guardar</a> <p>\" + e.latlng.lat + \",\" + e.latlng.lng + \"</p> </div>\", this.markerLatLng = [e.latlng.lat, e.latlng.lng];\n    }\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,SAAA,IAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA;AACA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,UAAA,EAAA,UAHA;AAIA,IAAA,OAAA,EAAA,OAJA;AAKA,IAAA,QAAA,EAAA,QALA;AAMA,IAAA,MAAA,EAAA;AANA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,GAAA,EAAA,yCAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAJA;AAKA,MAAA,YAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CALA;AAMA,MAAA,OAAA,EAAA;AACA,QAAA,EAAA,EAAA,OADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OANA;AAWA,MAAA,KAAA,EAAA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,MAAA,EAAA,CAAA,CAAA,MAAA,CAAA,SAAA,EAAA,CAAA,IAAA,CAFA;AAGA,QAAA,OAAA,EAAA;AAHA;AAXA,KAAA;AAiBA,GA5BA;AA6BA,EAAA,OA7BA,qBA6BA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,mHAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,WAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,OADA,EACA;AACA,MAAA,OAAA,CAAA,KAAA,GAAA,OAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,CAJA,EAIA;AACA,WAAA,KAAA,CAAA,OAAA,GAAA,kBAAA,CAAA,CAAA,MAAA,CAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,GAAA,GAAA,GAAA,EACA,KAAA,KAAA,CAAA,OAAA,GACA,8QAAA,CAAA,CAAA,MAAA,CAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,GAAA,GAAA,aAFA,EAGA,KAAA,YAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAHA;AAIA;AATA;AAnCA,CAAA","sourcesContent":["<template>\n  <div id=\"HelloWorld\">\n    <h2> Lealeft </h2>\n    <div class=\"column\">\n      <!-- <BrewMap ></BrewMap> -->\n\n      <div class=\"map\">\n          <l-map :zoom=\"zoom\" :center=\"center\" >\n            <l-tile-layer \n              :url=\"url\">\n            </l-tile-layer>\n            <l-marker :lat-lng=\"markerLatLng\" ></l-marker>\n            \n            <l-polygon\n              v-on:click=\"onMapClick\"\n              :key=\"polygon.id\"\n              :lat-lngs=\"polygon.latlngs\"\n              :color=\"polygon.color\"\n              @l-mouseover=\"change_color(polygon)\">\n              <l-popup :content=\"popup.content\"/>\n            </l-polygon>\n\n          </l-map>\n      </div>\n\n    \n\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n// import BrewMap from './BrewMap'\nimport {LMap, LTileLayer, LMarker, LPolygon, LPopup} from 'vue2-leaflet';\n\nexport default {\n  name: \"HelloWorld\",\n  components: {\n    // BrewMap,\n    LMap,\n    LTileLayer,\n    LMarker,\n    LPolygon,\n    LPopup\n  },\n  data () {\n    return {\n      puntos: null,\n      url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n      zoom: 13,\n      center: [0.43583,48.01156],\n      markerLatLng: [0.42183,48.01156],\n      polygon: {\n        id: 'my_id',\n        latlngs: [],\n        color: 'blue',\n      },\n      popup: {\n        id: 1,\n        latlng: L.latLng(47.417220, -1.25),\n        content: 'Another',\n      }\n    }\n  },\n  mounted () {\n    axios.get(\"https://rawgit.com/gregoiredavid/france-geojson/master/regions/pays-de-la-loire/communes-pays-de-la-loire.geojson\")\n      .then((response) => {\n        this.polygon.latlngs = response.data.features[0].geometry.coordinates[0]\n      })\n  },\n  methods: {\n  \tchange_color(polygon) {\n    \tpolygon.color = 'green';\n    },\n    onMapClick(e){\n      this.popup.content = \"Coordenadas (\" + e.latlng.lat +\" \" + e.latlng.lng +\")\",\n      this.popup.content = \n        \"yarn ser<ul class='borde'><li> <p>Muestras</p> <input name='muestras' placeholder='1'></li> <li><p>Radio(m)</p> <input name='radio' placeholder='10'></li></ul><div class='btns'><a href='' v-on:click='borrar'>Borrar</a><a href='' v-on:click='guardar'>Guardar</a> <p>\"+e.latlng.lat+\",\"+e.latlng.lng+\"</p> </div>\",\n      this.markerLatLng = [e.latlng.lat,e.latlng.lng]\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.column {\n  margin: 1%;\n  text-align: left;\n}\n.map {\n  height: 80vh;\n}\n</style>\n"],"sourceRoot":"src/components"}]}